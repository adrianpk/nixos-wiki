Most packages can be found in the nixpkgs repository. Some people
maintain additional repositories such as haskell-nix-overlay. But they
are less stable and probably depend on nixpkgs in some way.

Now how to find a package?

-   use grep (slow)
-   get gnu idutils. See [HOWTO](//HOWTO:idutils)
-   use the nix-env command:

<!-- -->

      nix-env -qa \* [-P] [--out-path] [ -f $NIXPKGS_ALL ]

to list all packages you can install. However Nix has to evaluate all
names so this is quite slow.

At the beginning you may have to look things up very often. That's why I
have written this script which is caching the result (quick & dirty):

    #!/bin/sh
    # this small scripts needs NIXPKGS_ALL be set to a pkgs/top-level/all-packages.nix file of a nixpkgs repository
    # then it takes the git/svn revision + repo state and caches the output of
    # nix-env -qa \* -P

    # TODO: take NIXPKS_CONFIG into acount

    revhash(){
      pushd . &> /dev/null
      cd $(dirname $(dirname $(dirname $NIXPKGS_ALL)))
      if [ -d .svn ]; then
        rev=`svn info | sed -n 's/.*Rev: \(.*\)/\1/p'` &> /dev/null
        hash=$(svn diff | md5sum | sed 's/ .*//' )
        type=svn
      elif [ -d .git ]; then
        rev=`git rev-parse --verify HEAD`
        hash=$(git diff | md5sum | sed 's/ .*//' )
        type=git
      else
        echo unkown repo type in `pwd`
        exit 1
      fi
      popd &> /dev/null
    }
    echo $NIXPKGS_ALL

    revhash
    mkdir -p /tmp/nix-caches/
    tmp="/tmp/nix-caches/$type-$rev-$hash-cache"
    echo cachefile is $tmp

    [ -f "$tmp" ] || {
      echo -n refreshing cache ..
      # --out-path 
      nix-env -qa \* -P -f $NIXPKGS_ALL > $tmp || { rm $tmp; echo "error"; exit 1; }
      echo done
    }
    grep -i $1 $tmp

