Under construction

What do we want to achieve?

Install nix in home of a non privileged user.

 Why is that important? Can you provide use cases?

Sometimes one does not get root privileges and as engineers we want to
solve problems fast. Convincing the internal IT team and waiting for
papers is a slow process. So a package manager that can work in our home
is a greath way to speed up the resolving of tasks.

Use-cases: - Another way to convince people (skeptical sysadmins) to use
nix. And later achieve world domination. - Great way to install complex
software to newbies on mac and GNU/linux. e.g. in sprints or workshops.
- Great way to get a development environment anywhere (e.g. vim 7.3 on
ubuntu 10.04) - A way to deploy commercial software in another prefix
(/opt/supersoftware) (don't tell Valve inc.) - Just because you are used
to nix

Trade-offs:

because nix packages also take the dependencies paths in the build
process therefore hash calculation. It is not possible to have the
binaries from hydra in the home because the hash differs. So It is just
a source install. But never the less it is simple.

 <http://releases.nixos.org/nix/latest/>

     cd ~
     mkdir .nix_test
     cd .nix_test/
     wget http://releases.nixos.org/nix/latest/nix-1.6.1.tar.gz
     ls
     tar xvzf nix-1.6.1.tar.gz 
     cd nix-1.6.1

 curl is needed

     configure: error: Nix requires libbz2, which is part of bzip2.  See http://www.bzip.org/.

libbz2-dev musti be installed to have

bzlib.h

     checking for SQLITE3... configure: error: Package requirements (sqlite3 >= 3.6.19) were not met:
     No package 'sqlite3' found

     Consider adjusting the PKG_CONFIG_PATH environment variable if you
     installed software in a non-standard prefix.

     Alternatively, you may set the environment variables SQLITE3_CFLAGS
     and SQLITE3_LIBS to avoid the need to call pkg-config.
     See the pkg-config man page for more details.

install sqlite

package to old

     checking for SQLITE3... configure: error: Package requirements (sqlite3 >= 3.6.19) were not met:

 On ubuntu 10.04 Version: 2.8.17-6build2

     wget "http://www.sqlite.org/2013/sqlite-amalgamation-3080200.zip"
     unzip sqlite-amalgamation-3080200.zip 
     cd sqlite-amalgamation-3080200
     gcc shell.c sqlite3.c -lpthread -ldl
     mv a.out sqlite

./configure --with-store-dir=/home/brodul/.nix\_prefix/
SQLITE3\_CFLAGS="-I /home/brodul/.nix\_test/sqlite-amalgamation-3080200"
SQLITE3\_LIBS="-L /home/brodul/.nix\_test/sqlite-amalgamation-3080200"

     checking for openssl... /usr/bin/openssl
     checking for pkg-config... /usr/bin/pkg-config
     checking pkg-config is at least version 0.9.0... yes
     checking for OPENSSL... yes
     checking for BZ2_bzWriteOpen in -lbz2... yes
     checking bzlib.h usability... yes
     checking bzlib.h presence... yes
     checking for bzlib.h... yes
     checking for SQLITE3... yes
     checking whether DBD::SQLite works... no
     configure: error: in `/home/brodul/.nix_test/nix-1.6.1':
     configure: error: The Perl modules DBI and/or DBD::SQLite are missing.
     See `config.log' for more details

sudo apt-get install libdbi-perl

 ./configure --with-store-dir=/home/brodul/.nix\_prefix/
SQLITE3\_CFLAGS="-I /home/brodul/.nix\_test/sqlite-amalgamation-3080200"
SQLITE3\_LIBS="-L /home/brodul/.nix\_test/sqlite-amalgamation-3080200"

References:

blog1
<http://sandervanderburg.blogspot.com/2013/06/setting-up-multi-user-nix-installation.html>,

blog2
<http://blog.lastlog.de/posts/running_the_nix_package_manager_in_a_prefix_as_the_home_directory/>,

blog3
<http://invalidmagic.wordpress.com/2011/01/21/running-the-nix-package-manager-in-a-prefix-as-the-home-directory/>

