Using buildEnv to create a profile for development
--------------------------------------------------

The following expression can be used to create a profile with erlang:

/root/.nixpkgs/config.nix

    {
      packageOverrides = pkgs: {
        envErlangDev = pkgs.buildEnv {
          name = "env-erlang-dev-1.0";
          ignoreCollisions = true;
          paths = with pkgs; [
            erlang
          ];
        };
      };
    }

 These can be then be installed into a profile:

    # nix-env -iA pkgs.envErlangDev -p /nix/var/nix/profiles/erlangdev

To make use of this profile you can create an activation script which
sets some environment variables:

    /home/me/dev/erlenv/$ cat activate
    PROFILE=erlangdev
    NIXPROFILE=/nix/var/nix/profiles/$PROFILE

    export PATH=$NIXPROFILE/bin:$PATH
    export PYTHONPATH=$NIXPROFILE/lib/python2.7/site-packages
    export LD_LIBRARY_PATH="$NIXPROFILE/lib"
    export NIX_LDFLAGS="-L $NIXPROFILE/lib"
    export NIX_CFLAGS_COMPILE="-I $NIXPROFILE/include"
    export PKG_CONFIG_PATH="$NIXPROFILE/lib/pkgconfig"

    PS1='\[\033[0;36m\][$PROFILE]'$PS1

source this file to set the variables in your current shell:

     /home/me/dev/erlenv $ . activate
