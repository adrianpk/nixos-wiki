The standard way to keep a set of packages up-to-date in Nix is to
install them into a profile -- typically the default profile -- and to
run "`nix-env -u \*`", possibly even "`nix-env -u \* --always"`.

Sometimes, however, it is desirable to refer to packages by their
nixpkgs attribute rather their name, or maybe one would like to group a
set of packages into a single attribute so that they can be installed
together with a single command. Nix offers a mechanism for that purpose,
too, namely the `buildEnv` function, which can be used as follows:

    # ~/.nixpkgs/config.nix

    {
      packageOverrides = pkgs:
      {
        haskellEnv = pkgs.buildEnv {
          name = "haskell-packages";
          paths = with pkgs.haskellPackages; [ghc QuickCheck cmdlib];
        };
      };
    }

That code snippet creates a "collection package", which consists of the
union of several others, and it can be installed by running either of
the following commands:

    nix-env -iA haskellEnv
    nix-env -i haskell-packages

If the name `name` attribute of a collection does not include a version
number (and it typically won't), then "`nix-env -u \*`" is typically not
going to update that package even if its components have changed. In
that case, it is necessary to pass the `--always` flag to the update
operation, to evaluate everything from the ground up.

