this wiki page describes **how to work with nixos/nixpkgs/...**:

     https://github.com/nixos

basics
------

say of are running nixos using nixpkgs. if you want to change parts of
your system you need to use git:

     $ cd $HOME/code/
     $ mkdir code; cd code
     $ git clone https://github.com/NixOS/nixpkgs
     $ git clone https://github.com/NixOS/nixos

now you have two local repositories: nixpkgs and nixos

our workflow is similar to the diaspora documented one, so have a
glimpse there as well:

     https://github.com/diaspora/diaspora/wiki/Git-Workflow

how to install from the local overlay
-------------------------------------

this section tells you how to apply changes to your current system based
on your local repositories:

list all available software from the **local overlay \~/code/nixpkgs**

     $ NIX_PATH="nixos=$HOME/code/nixpkgs" nix-env -f '<nixos>' -qa '*'

install python-urlgrabber from the local overlay

     $ NIX_PATH="nixos=$HOME/code/nixpkgs" nix-env -f '<nixos>' -i python-urlgrabber

update the system based on your local **\~/code/nixos** and
**\~/code/nixpkgs**

     $ nixos-rebuild -I nixos=~/code/nixos -I nixpkgs=~/code/nixpkgs 

build an expression\`\`\` and put the output in to \`pwd\`/results

     $ nix-build ~/code/nixpkgs -A irssi

get an environment which is used to build irssi

     $ nix-build --run-env -A irssi

get an persistent environment which is used to build irssi

     $ nix-build --run-env -A irssi --add-root

### git rebase

     git pull upstream master

now after some modifications ...

     git add foo
     git commit
     git fetch upstream master
     git pull --rebase upstream master
     git push upstream
