[[edit](/w/index.php?title=NixOS_vs_other_distributions&action=edit&section=1 "Edit section: I want to install a program in my system")] I want to install a program in my system
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

In LSB distributions, you ask to the package manager to get a new
package in. Let's say, \`xterm\`. And then users or the admin can use it
for whatever purposes.

In NixOS, there are different approaches depending on the purpose of
having that program. If it is meant only to be available in the PATH,
there are two options: install it in the default profile as a usual
"nix-env -i xterm" (run by root), or add it into the nixos
configuration.nix list attribute \`environment.systemPackages\` (that
means reading the nixos and nix manuals).

If the program is meant to be used as a service to be started at boot
time, then you need a nixos module made for that purpose. You may find
that the module is ready in NixOS (NixOS comes with many modules), like
for example apache httpd, x.org, ... The modules are usually all
included, and then you have to set a configuration option in
configuration.nix in order to enable their effects. For example, for the
httpd server to go, you need to set \`services.httpd.enable = true\`.
Then, when rebuilding the nixos system, the apache httpd program will be
installed as a *dependency of your system*, and it will be referenced by
an upstart script (that of \`/etc/init\`) to be started at boot time. In
fact, usually the script in \`/etc/init\` will be your reference to find
any file related to the apache httpd server running.

[[edit](/w/index.php?title=NixOS_vs_other_distributions&action=edit&section=2 "Edit section: I want to read the configuration of a daemon")] I want to read the configuration of a daemon
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

In LSB distributions, the configuration for daemons is set in /etc. You
will know that the X.org server will read the files in /etc/X11, and the
files there set will indicate how the X.org server is behaving.

In NixOS, not all daemon configuration files are placed in /etc. Sure
all of them will be in the nix store, there is where all nix managed
files go, but you are going to find some symlinks in /etc that will
refer to store paths.

For daemons, a good point to start are the symlinks in /etc/init/.
Upstart will read those files at boot, to decide what programs to launch
and how. Those scripts will contain absolute path references to the
binaries and configuration files involved, all of them generated by nix.

If you meant to edit any of those files, read the next section.

[[edit](/w/index.php?title=NixOS_vs_other_distributions&action=edit&section=3 "Edit section: I want to edit a file in /etc/")] I want to edit a file in /etc/
-------------------------------------------------------------------------------------------------------------------------------------------------------------

In LSB distributions, this is the way you will proceed in order to make
a system-wide change for some program or library - either a daemon, or
some more interactive: you would edit the files in /etc. You may have
the files in /etc under a Version Control System.

In NixOS, almost all files in /etc (except /etc/{passwd,shadow,group})
are meant to be managed *by nixos*. This means that those files are
generated according to your nixos configuration, and nixos and nixpkgs
source trees. As the source trees are internet-available, the
peculiarities of your system will usually be set only in
/etc/nixos/configuration.nix. This means you should not manually edit
files in /etc.

Look at the nixos manual (or \`man configuration.nix\`), and you are
supposed to find options that will allow you to set any change you
wanted to achieve through edition of /etc files. After having updated
your configuration.nix, "nixos-rebuild switch" as usual, and see your
changes being activated. That will allow you the usual nixos rollback.

There is no way to expect system rollbacks or reproducibility if you
modify manually files in /etc that lay in the nix store. The files in
the store are meant to be modified only by nix.

