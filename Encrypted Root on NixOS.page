There are many possible encrypted root setups. This guide is for setting
up LVM over Luks, which is an easy and safe setup that will satisfy most
users. Other setups should still be sufficiently similar.

Important
---------

Here you will find \*only\* NixOS-specific bits. For general information
regarding this setup, how to partition disks and such refer to
[[1]](http://wiki.archlinux.org/index.php/System_Encryption_with_LUKS_for_dm-crypt)
or other detailed guide.

Config
------

In this example we assume that your boot partition is /dev/sda1 and your
luks-encrypted partition is /dev/sda2 that contains the LVM volume group
"vg".

This is what needs to be put into /etc/nixos/configuration.nix:

### Make sure initrd finds and mounts the root partition

      boot.initrd.luksRoot = "/dev/sda2";

If you need to decrypt additional devices, you can do it like this:

      boot.initrd.postDeviceCommands = "cryptsetup luksOpen /dev/sda3 lukshome";

### Extra modules you might need

Depending on the encryption algorithm you have chosen for your Luks
volume, you will probably need to ensure kernel has the necessary crypto
modules.

If you are unsure which ones, run

    cryptsetup luksDump /dev/sda2

What you are looking for is this:

    LUKS header information for /dev/sda2

    Version:        1
    Cipher name:    aes
    Cipher mode:    cbc-essiv:sha256
    Hash spec:      sha1

In this example you need SHA1, SHA256, AES, and CBC.

You can put the required crypto modules into initrd along with dm\_crypt
module needed by Luks like this:

    boot.initrd.kernelModules = ["dm_crypt" "aes-i586" "sha256" "sha1" "cbc"];

### Root Filesystem

      fileSystems = [ {
        mountPoint = "/";
        device = "/dev/mapper/vg-root";
      } {
        mountPoint = "/boot";
        device = "/dev/sda1";
      }
      #other filesystems go here 
      ]
