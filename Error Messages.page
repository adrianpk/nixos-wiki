[[edit](/w/index.php?title=Error_Messages&action=edit&section=1 "Edit section: Error Messages")] Error Messages
---------------------------------------------------------------------------------------------------------------

If you are stumped by an error message, add it here.

Error Message

Occurs When

Meaning

Suggested Solution

Related Links

`` error: cannot auto-call a function that has an argument without a default value (`stdenv') ``

Trying to build an individual package with:
`nix-build --dry-run ./default.nix`

A Nix function was called without a required argument.

Use `--arg` or `--argstr` to specify arguments.

[Nix Manual: Common
Options](http://nixos.org/nix/manual/#sec-common-options)\
 [Explanation in email
thread](http://lists.science.uu.nl/pipermail/nix-dev/2009-July/002671.html)

`/nix/store/*-libtool-2.4.2/bin/libtool: 1581: /nix/store/*-libtool-2.4.2/bin/libtool: preserve_args+= --tag CC: not found`

Building a package which depends on libtool.

The `--tag CC` argument is used when libtool is called, but...something.

Ensure Bash is the shell used. Consider using
`sudo dpkg-reconfigure dash` to fix `/bin/sh`, which "libtool"
references. Nix is heavily dependent on Bash.

[NAS-Central: Compiling for
Dummies](http://forum.nas-central.org/viewtopic.php?f=249&t=7955#p36385):
See the line before "not found", which uses /bin/sh.

`Option 'X' defined without option declaration.`

Using `nixos-rebuild`.

An option was used in `configuration.nix` which wasn't found in the
NixOS modules.

Check syntax and validity of all options in `configuration.nix`.\
 If developing a module, ensure it is added to the `module-list.nix`
file.

[NixOS Modules](//NixOS:Modules)

`` error: getting attributes of path `X': No such file or directory ``

Using `nixos-rebuild`.

Couldn't convert between `types.path` and `types.string`.

Use the `toString` or `builtins.toPath` functions or change an option's
type.

[Nix Manual: Built-in
Functions](http://nixos.org/nix/manual/#ssec-builtins)\
 [NixOS Manual: Option
Declarations](http://nixos.org/nixos/manual/#idp772352)

`` error: opening lock file `/nix/var/nix/profiles/my-profile.lock': Permission denied ``

Using `nix-env --uninstall`

The current user does not have write-permission to the `/nix/store`
directory.

Change ownership of `/nix/store` to the current user.

`$ chown -R <current user name> /nix/store /nix/var/nix`

[Nix Manual: Single-user Mode](http://nixos.org/nix/manual/#idp24312864)

`` error: getting information about `*/.nix-defexpr`: No such file or directory ``

Using `nix-env -i $X`

Nix is looking for the X package. By default, it looks in the user's
`.nix-defexpr` directory.

Add a NixPkgs channel for the user.

`$ nix-channel --add http://nixos.org/channels/nixpkgs-unstable && nix-channel --update`

[Nix Manual: Quick Start](http://nixos.org/nix/manual/#chap-quick-start)

